create table categories
(
    id    bigint primary key generated by default as identity,
    title varchar(100) unique not null
);

create table products
(
    id          bigint primary key generated by default as identity,
    title       varchar(100) unique not null,
    price       numeric(19, 2)      not null check (price > 0),
    description varchar(255),
    image       oid
);

create table products_categories
(
    product_id  bigint references products (id),
    category_id bigint references categories (id),
    primary key (product_id, category_id)
);

-- @Enumerated roles: USER, MANAGER, ADMIN

create table users
(
    id       bigint primary key generated by default as identity,
    email    varchar(100) unique not null,
    password varchar(100)        not null,
    name     varchar(100),
    surname  varchar(100),
    phone    varchar(100) unique,
    role     varchar(50)         not null default 'USER',
    status   varchar(50)         not null default 'ACTIVE'
);

create table carts
(
    id         bigint primary key generated by default as identity,
    user_id    bigint    not null unique references users (id) on delete cascade,
    created_at timestamp not null
);

create table cart_positions
(
    id         bigint generated by default as identity,
    cart_id    bigint not null references carts (id) on delete cascade,
    product_id bigint not null references products (id) on delete cascade,
    quantity   bigint not null check (quantity > 0),
    unique (cart_id, product_id)
);

-- @Enumerated status: NEW (user approved order), ACTIVE (manager approved order),
-- CLOSED (LocalDateTime.now() > order.executionDate)

create table orders
(
    id                     bigint primary key generated by default as identity,
    user_id                bigint       not null references users (id) on delete cascade,
    status                 varchar(50)  not null,
    created_at             timestamp    not null,
    updated_at             timestamp    not null,
    planned_execution_date timestamp    not null,
    address                varchar(255) not null,
    comment                varchar(255)
);

create table order_positions
(
    id         bigint generated by default as identity,
    order_id   bigint not null references orders (id) on delete cascade,
    product_id bigint not null references products (id) on delete cascade,
    quantity   bigint not null check (quantity > 0),
    unique (order_id, product_id)
);